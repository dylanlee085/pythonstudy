最后，还要说的就是，起名，真的很重要！Master/Slave模式，是分布式系统中一个比较常用的计算结构。这个词最开始来源于MySql数据库，主要表示MySQL数据库自身提供的主从复制功能，通过master-slave，可以方便的实现数据的多处自动备份，实现数据库的拓展。多个数据备份不仅可以加强数据的安全性，通过实现读写分离还能进一步提升数据库的负载性能。这个名词由两个单词组合而成：Master和Slave。Master：主人、雇主。 Slave：奴，奴隶。组合成的词一般写作 或者 ，一般表示主从结构。这个词本身是一个没有任何感情色彩的中性词语。目前在软件行业内被广泛使用，如Mysql、Redis、Python、mongodb、ActiveMQ、PostgreSQL、Ruby、Jenkins 等都有类似的描述。但是，随着人们开始越来越重视人权、歧视等问题，很多开发者认为这一描述具有侵犯性。所以，出现了很多声音呼吁修改这一描述。他们的主要诉求是不要使用这一词汇，而是使用其他词汇代替。这件事儿之所以最近这么受重视，是因为比较关键的技术被要求修改，那就是Redis和Python。2018年9月7日，Redis 5.0 RC5 发布了，该版本中仍然使用来表示主从模式，这引起了很多开发者的抗议。值得注意的是，以上提交记录的第一个提交者antirez就是Redis的作者。他的真名叫Salvatore Sanfilippo，antirez是他的网名。对于大部分开发者抗议使用master-slave这一描述，antirez 表示这已经不是开发者第一次提这种要求了，他很抱歉 master-slave 这个描述让许多人感到失望，但他不认为这个特定于上下文环境的术语具有侵犯性。但是，虽然这么说，但是antirez还是在推特上发起了一个投票，结果显示，超过半数的人希望修改这一描述。antirez 还表示，这个看似简单的修改实际上要付出昂贵的代价，并产生兼容性问题。例如：不能在应用现有的 PR现在有像 INFO 和 ROLE 这样的命令 —— 使用包含 slave 术语的协议进行回复术语 slave 中的源代码包含 1500 个事件拥有私人项目并根据需要进行代码合并的人会遇到很多问题可以看到，冒然进行变动会产生很多问题。而且，现在发布的 Redis 5 候选版本是向后兼容的首个稳定版本。最后 antirez 决定，在不影响项目进度的情况下做了些妥协，表达了希望能折中解决问题的建议。将 master-slave 架构的描述改为 master-replica为 SLAVEOF 提供别名 REPLICAOF，所以仍然可以使用 SLAVEOF，但多了一个选项保持继续使用 slave 来对 INFO 和 ROLE 进行回应，现在目前看来，这仍然是一个重大的破坏性变更编写一个 INFO 的替代品在内部替换很多东西，因为技术原因，如果作了改动，许多 PR 也会无法应用，所以必须在某些地方进行大变动同样是2018年9月7日，在 Red Hat 工作的 Python 开发者 Victor Stinner 公开提交了 4 个 PR，希望能将 Python 文档和代码中出现的 “master” 和 “slave” 修改为像 “parent” 和 “worker” 这样的术语，以及对其他类似的术语也进行修改。Victor Stinner 在他的 bug report 中解释说，出于多元化的考虑，尽量避免出现与奴隶制相关的术语反而可能会更好，像 ‘master’ 和 ‘slave’ 这种。他还指出之前就已有关于这个问题的投诉，但都是私下提出的 —— 以避免引起激烈的争论。对于这个问题，Python的创始人，已经宣布退出Python核心开发组决策层的Guido van Rossum被请回参与了这一事件的讨论及仲裁。最终他做出了重要的决定：事实上，在技术圈子里，这种关于政治正确的事屡见不鲜。其实，这也不是关于master-slave的第一次讨论，Redis也并不是第一个屈服的。早在2014 年，Drupal 项目就用 primary 和 replica 替换了 master 和 slave；Django 项目则用 leader 和 follower 替换之；CouchDB 项目也做了类似语言上的净化。如今，Redis和Python也将在后续版本中国年逐渐淡化master-slave这一说法。随着Redis和Python的妥协，相信未来会有更多的软件也会做一些相应的修改。那么问题来了，下一个会是谁呢？继master-slave之后，会不会有另外的词汇被质疑呢？下一个词又会是什么呢？最后，还要说的就是，起名，真的很重要！